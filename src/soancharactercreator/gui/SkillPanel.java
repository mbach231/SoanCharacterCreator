/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package soancharactercreator.gui;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagLayout;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JTextField;
import soancharactercreator.BaseSkill;
import soancharactercreator.Header;
import soancharactercreator.Skill;

/**
 *
 * @author Mike
 */
public class SkillPanel extends javax.swing.JPanel {

    BaseSkill skill_;
    MainFrame mainFrame_;
    //SinsApplet mainFrame_;
    /**
     * Creates new form SkillPanel
     *
     * @param skill
     * @param mainFrame
     */
    public SkillPanel(BaseSkill skill, MainFrame mainFrame) {
        skill_ = skill;
        mainFrame_ = mainFrame;
        initComponents();

        this.setLayout(new BoxLayout(this, BoxLayout.X_AXIS));
        this.setBorder(BorderFactory.createEtchedBorder());
        this.setPreferredSize(new Dimension(0, 35));

        //this.setLayout(new GridBagLayout());
        
        //this.remove(skillNameTextField);
        
        
        String name = skill.getName();

        if (skill instanceof Header && !name.contains("Header")) {
            name += " Header";
        }

        skillNameTextField.setText(name);
        skillNameTextField.setEditable(false);
        skillNameTextField.setBorder(BorderFactory.createEmptyBorder());
        skillNameTextField.setFont(skillNameTextField.getFont().deriveFont(Font.BOLD));
        skillNameTextField.setPreferredSize(new Dimension(50, 0));

        if (skill.getCost() > 0) {
            skillCostTextField.setText(skill.getCost() + " CP");
            skillCostTextField.setEditable(false);
            skillCostTextField.setBorder(BorderFactory.createEmptyBorder());
            skillCostTextField.setFont(skillNameTextField.getFont().deriveFont(Font.BOLD));

            skillCheckbox.setSelected(false);
        } else {
            skillCostTextField.setText("");
            skillCheckbox.setSelected(true);
            skillCheckbox.setEnabled(false);
            skillCheckbox.setFocusable(false);
        }
        this.add(Box.createRigidArea(new Dimension(5, 0)));
        if (skill instanceof Skill) {
            skillCheckbox.setEnabled(false);
        }

    }

    public BaseSkill getSkill() {
        return skill_;
    }

    public void setSkillEnabled(boolean enabled) {
        this.setEnabled(enabled);
        skillNameTextField.setEnabled(enabled);
        skillCostTextField.setEnabled(enabled);
        skillCheckbox.setEnabled(enabled);
    }

    public void setCheckbox(boolean enabled, boolean selected) {
        skillCheckbox.setEnabled(enabled);
        skillCheckbox.setSelected(selected);
    }

    public void setCostTextToFree() {
        skillCostTextField.setText("");
    }

    public void resetCostText() {
        if (skill_.getCost() > 0) {
            skillCostTextField.setText(skill_.getCost() + " CP");
        } else {
            skillCostTextField.setText("");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        skillNameTextField = new javax.swing.JTextField();
        skillCostTextField = new javax.swing.JTextField();
        skillCheckbox = new javax.swing.JCheckBox();

        skillNameTextField.setEditable(false);
        skillNameTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        skillNameTextField.setText("Skill Name");
        skillNameTextField.setBorder(null);

        skillCostTextField.setEditable(false);
        skillCostTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        skillCostTextField.setText("CP Cost");
        skillCostTextField.setBorder(null);

        skillCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                skillCheckboxStateChanged(evt);
            }
        });
        skillCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skillCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(skillNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skillCostTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skillCheckbox)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(skillNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(skillCostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(skillCheckbox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void skillCheckboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_skillCheckboxStateChanged

    }//GEN-LAST:event_skillCheckboxStateChanged

    private void skillCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skillCheckboxActionPerformed

        if (skillCheckbox.isSelected()) {
            mainFrame_.skillPanelCheckboxSelected(this);
        } else {
            mainFrame_.skillPanelCheckboxUnselected(this);
        }
    }//GEN-LAST:event_skillCheckboxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox skillCheckbox;
    private javax.swing.JTextField skillCostTextField;
    private javax.swing.JTextField skillNameTextField;
    // End of variables declaration//GEN-END:variables
}
